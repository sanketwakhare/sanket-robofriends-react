{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","Fragment","className","src","alt","CardList","cardsArray","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchName","event","setState","searchfield","target","value","state","console","log","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAiBeA,EAfF,SAACC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAA1B,iBAA6CM,IAAI,WACzD,gCACI,6BAAKL,IACL,4BAAIC,aCKTK,EAZE,SAACR,GACd,IACMS,EADaT,EAAXU,OACkBC,KAAI,SAAAC,GAC1B,OAAO,cAAC,EAAD,CAAoBX,GAAIW,EAAKX,GAAK,IAAKC,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAAzDS,EAAKX,OAE3B,OACI,cAAC,IAAMG,SAAP,UACKK,KCGEI,EAXG,SAACb,GACf,IAAQc,EAAiBd,EAAjBc,aACR,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACbU,KAAK,SAASC,YAAY,mBAC1BC,SAAUH,OCEXI,G,MARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACMtB,EAAMuB,aC4CLC,E,kDA1CX,aAAe,IAAD,8BACV,gBAiBJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1C,EAAKC,MAAQ,CACTrB,OAAQ,GACRkB,YAAa,IAEjBI,QAAQC,IAAI,eANF,E,qDASd,WAAqB,IAAD,OAChBD,QAAQC,IAAI,qBACZC,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAAEjB,OAAQ4B,S,oBAQhC,WACI,MAAgCC,KAAKR,MAA7BrB,EAAR,EAAQA,OAAQkB,EAAhB,EAAgBA,YAChBI,QAAQC,IAAI,UACZ,IAAMO,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAShB,EAAYe,kBAEzD,OACI,cAAC,IAAMvC,SAAP,UACI,sBAAKC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKd,eAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAQ8B,e,GAnCxBK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMnD,SAAP,UACE,cAAC,EAAD,MAEFoD,SAASC,eAAe,SAM1BX,M","file":"static/js/main.890da816.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { id, name, email } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <div className='bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n                <img src={`https://robohash.org/${id}?size=200x200`} alt='Robots'></img>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = (props) => {\r\n    const { robots } = props;\r\n    const cardsArray = robots.map(user => {\r\n        return <Card key={user.id} id={user.id + 100} name={user.name} email={user.email} />;\r\n    })\r\n    return (\r\n        <React.Fragment>\r\n            {cardsArray}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    const { searchChange } = props;\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' placeholder='Search Robots...'\r\n                onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '500px' }} >\r\n            { props.children}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n        console.log('constructor')\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        }).then(users => {\r\n            this.setState({ robots: users });\r\n        })\r\n    }\r\n\r\n    onSearchName = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        console.log('render')\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchName} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}